openapi: 3.0.0
info:
  title: Route Optimizer API
  description: |
    API service for optimizing delivery routes with AI/ML techniques.
    This API provides endpoints for geocoding, route optimization, traffic prediction,
    fuel consumption estimation, and other logistics-related services.
  version: 1.0.0
  contact:
    name: API Support
    email: test1@test.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: /api
    description: Main API server

tags:
  - name: system
    description: System utility endpoints
  - name: optimization
    description: Route optimization endpoints
  - name: geocoding
    description: Geocoding and location services
  - name: traffic
    description: Traffic data and predictions
  - name: fuel
    description: Fuel consumption estimation and tracking
  - name: clustering
    description: Location clustering for multi-vehicle routing
  - name: data
    description: Data processing and file uploads

paths:
  /health:
    get:
      summary: Health check
      description: Check if the API is running properly
      tags:
        - system
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-03-28T08:30:00Z"
                  version:
                    type: string
                    example: "1.0.0"

  /geocode:
    post:
      summary: Geocode addresses
      description: Convert addresses to geographic coordinates (latitude and longitude)
      tags:
        - geocoding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addresses:
                  type: array
                  items:
                    type: string
                  example: ["123 Main St, New York, NY", "456 Park Ave, Miami, FL"]
              required:
                - addresses
      responses:
        '200':
          description: Successful geocoding response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: object
                    additionalProperties:
                      oneOf:
                        - type: object
                          properties:
                            latitude:
                              type: number
                              format: float
                              example: 40.7128
                            longitude:
                              type: number
                              format: float
                              example: -74.0060
                        - type: "null"
                  count:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 2
                      successful:
                        type: integer
                        example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /distance-matrix:
    post:
      summary: Calculate distance matrix
      description: Calculate distances between multiple coordinates
      tags:
        - geocoding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coordinates:
                  type: array
                  items:
                    type: object
                    properties:
                      lat:
                        type: number
                        format: float
                        example: 40.7128
                      lng:
                        type: number
                        format: float
                        example: -74.0060
                    required:
                      - lat
                      - lng
              required:
                - coordinates
      responses:
        '200':
          description: Distance matrix
          content:
            application/json:
              schema:
                type: object
                properties:
                  matrix:
                    type: array
                    items:
                      type: array
                      items:
                        type: number
                        format: float
                    example: [[0, 2.5, 3.2], [2.5, 0, 1.8], [3.2, 1.8, 0]]
                  size:
                    type: integer
                    example: 3
                  unit:
                    type: string
                    example: kilometers
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /optimize-route:
    post:
      summary: Optimize delivery routes
      description: Generate optimized routes for deliveries using AI/ML techniques
      tags:
        - optimization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                depot:
                  $ref: '#/components/schemas/Location'
                locations:
                  type: array
                  items:
                    $ref: '#/components/schemas/Location'
                vehicle_count:
                  type: integer
                  example: 1
                  description: Number of vehicles to use
                max_distance:
                  type: number
                  example: 100
                  description: Maximum distance per vehicle (in kilometers)
                use_traffic:
                  type: boolean
                  default: false
                  description: Whether to consider real-time traffic data
                use_fuel_efficient:
                  type: boolean
                  default: false
                  description: Whether to optimize for fuel efficiency
                optimization_objective:
                  type: string
                  enum: [distance, time, fuel, balanced]
                  default: balanced
                  description: The main objective to optimize for
              required:
                - depot
                - locations
      responses:
        '200':
          description: Optimized routes
          content:
            application/json:
              schema:
                type: object
                properties:
                  routes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
                  optimization_type:
                    type: string
                    enum: [distance, traffic_aware, fuel_efficient]
                    example: fuel_efficient
                  vehicle_count:
                    type: integer
                    example: 1
                  total_locations:
                    type: integer
                    example: 10
                  timestamp:
                    type: string
                    format: date-time
                  traffic_info:
                    type: object
                    description: Only present when use_traffic is true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /predict-travel-time:
    post:
      summary: Predict travel times
      description: Predict travel times based on distances, optionally considering time of day
      tags:
        - optimization
        - traffic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                distances:
                  oneOf:
                    - type: array
                      items:
                        type: number
                        format: float
                      example: [10.5, 15.2, 8.7]
                    - type: array
                      items:
                        type: array
                        items:
                          type: number
                          format: float
                time_of_day:
                  oneOf:
                    - type: string
                      example: "08:30"
                    - type: array
                      items:
                        type: string
                day_of_week:
                  oneOf:
                    - type: string
                      enum: [monday, tuesday, wednesday, thursday, friday, saturday, sunday]
                    - type: integer
                      minimum: 0
                      maximum: 6
                    - type: array
                      items:
                        type: string
              required:
                - distances
      responses:
        '200':
          description: Predicted travel times
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      times:
                        type: array
                        items:
                          type: number
                          format: float
                        example: [0.35, 0.51, 0.29]
                      unit:
                        type: string
                        example: hours
                  - type: object
                    properties:
                      time_matrix:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                            format: float
                      unit:
                        type: string
                        example: hours
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /traffic-data:
    get:
      summary: Get traffic data
      description: Get traffic data for a geographic area
      tags:
        - traffic
      parameters:
        - name: min_lat
          in: query
          required: true
          schema:
            type: number
            format: float
          example: 40.70
        - name: min_lon
          in: query
          required: true
          schema:
            type: number
            format: float
          example: -74.10
        - name: max_lat
          in: query
          required: true
          schema:
            type: number
            format: float
          example: 40.80
        - name: max_lon
          in: query
          required: true
          schema:
            type: number
            format: float
          example: -73.90
      responses:
        '200':
          description: Traffic data for the specified area
          content:
            application/json:
              schema:
                type: object
                properties:
                  traffic_data:
                    type: object
                    properties:
                      traffic_signals:
                        type: array
                        items:
                          type: object
                      road_speeds:
                        type: object
                      congestion_areas:
                        type: array
                        items:
                          type: object
                      is_simulated:
                        type: boolean
                  bounds:
                    type: array
                    items:
                      type: number
                    example: [40.70, -74.10, 40.80, -73.90]
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /fuel-consumption/predict:
    post:
      summary: Predict fuel consumption
      description: Predict fuel consumption for a route based on various factors
      tags:
        - fuel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                distance:
                  type: number
                  format: float
                  example: 50.5
                  description: Distance in kilometers
                vehicle_type:
                  type: string
                  enum: [car, van, truck, motorbike]
                  example: van
                vehicle_weight:
                  type: number
                  format: float
                  example: 2500
                  description: Vehicle weight in kg
                load_weight:
                  type: number
                  format: float
                  example: 800
                  description: Cargo weight in kg
                avg_speed:
                  type: number
                  format: float
                  example: 60
                  description: Average speed in km/h
                traffic_factor:
                  type: number
                  format: float
                  example: 1.2
                  description: Traffic congestion factor (1.0 = no traffic)
                stop_frequency:
                  type: number
                  format: float
                  example: 0.2
                  description: Number of stops per km
                road_type:
                  type: string
                  enum: [highway, urban, mixed]
                  example: mixed
                gradient:
                  type: number
                  format: float
                  example: 0
                  description: Average road gradient (%)
                temperature:
                  type: number
                  format: float
                  example: 20
                  description: Ambient temperature (°C)
                fuel_type:
                  type: string
                  enum: [diesel, petrol, gasoline, lpg, cng]
                  example: diesel
              required:
                - distance
                - vehicle_type
      responses:
        '200':
          description: Fuel consumption prediction
          content:
            application/json:
              schema:
                type: object
                properties:
                  fuel_consumption:
                    type: number
                    format: float
                    example: 5.2
                  unit:
                    type: string
                    example: liters
                  co2_emissions:
                    type: number
                    format: float
                    example: 13.9
                  co2_unit:
                    type: string
                    example: kg
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /fuel-consumption/record:
    post:
      summary: Record actual fuel consumption
      description: Record actual fuel consumption for model improvement
      tags:
        - fuel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                route_id:
                  type: integer
                  example: 123
                vehicle_id:
                  type: integer
                  example: 456
                actual_fuel:
                  type: number
                  format: float
                  example: 12.5
                  description: Actual fuel consumed in liters
                driver_id:
                  type: integer
                  example: 789
                metadata:
                  type: object
                  properties:
                    load_weight:
                      type: number
                      format: float
                      example: 800
                    avg_speed:
                      type: number
                      format: float
                      example: 55
                    traffic_factor:
                      type: number
                      format: float
                      example: 1.3
                    road_type:
                      type: string
                      example: mixed
                    temperature:
                      type: number
                      format: float
                      example: 22
                    weather:
                      type: string
                      example: clear
                    driver_efficiency:
                      type: number
                      format: float
                      example: 0.95
              required:
                - route_id
                - vehicle_id
                - actual_fuel
      responses:
        '200':
          description: Fuel consumption recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Fuel consumption recorded successfully
                  route_id:
                    type: integer
                    example: 123
                  vehicle_id:
                    type: integer
                    example: 456
                  actual_fuel:
                    type: number
                    format: float
                    example: 12.5
                  status:
                    type: string
                    example: success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /clusters:
    post:
      summary: Cluster locations
      description: Cluster locations for multi-vehicle routing
      tags:
        - clustering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locations:
                  type: array
                  items:
                    $ref: '#/components/schemas/Location'
                num_clusters:
                  type: integer
                  example: 3
                  description: Number of clusters to create
              required:
                - locations
                - num_clusters
      responses:
        '200':
          description: Clustered locations
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      type: object
                      properties:
                        cluster_id:
                          type: integer
                          example: 0
                        location_indices:
                          type: array
                          items:
                            type: integer
                          example: [1, 3, 5]
                        size:
                          type: integer
                          example: 3
                  num_clusters:
                    type: integer
                    example: 3
                  total_locations:
                    type: integer
                    example: 10
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /process-locations:
    post:
      summary: Process location data
      description: Process location data from CSV or JSON
      tags:
        - geocoding
        - data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locations:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Customer A"
                      address:
                        type: string
                        example: "123 Main St, New York, NY"
                      latitude:
                        type: number
                        format: float
                      longitude:
                        type: number
                        format: float
                      time_window_start:
                        type: string
                        example: "09:00"
                      time_window_end:
                        type: string
                        example: "12:00"
                    required:
                      - name
                      - address
              required:
                - locations
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file with location data
              required:
                - file
      responses:
        '200':
          description: Processed locations
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  count:
                    type: integer
                    example: 10
                  geocoded:
                    type: integer
                    example: 10
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /upload-csv:
    post:
      summary: Upload CSV file
      description: Upload a CSV file containing location data
      tags:
        - data
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file containing location data (with headers)
              required:
                - file
      responses:
        '200':
          description: CSV processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  count:
                    type: integer
                    example: 15
                  message:
                    type: string
                    example: "CSV imported successfully"
        '400':
          description: Bad request or invalid CSV format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Location:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Warehouse"
        address:
          type: string
          example: "123 Main St, New York, NY"
        latitude:
          type: number
          format: float
          example: 40.7128
        longitude:
          type: number
          format: float
          example: -74.0060
        time_window_start:
          type: string
          example: "08:00"
          description: Start of delivery time window (HH:MM format)
        time_window_end:
          type: string
          example: "18:00"
          description: End of delivery time window (HH:MM format)
      required:
        - latitude
        - longitude

    Route:
      type: object
      properties:
        vehicle_id:
          type: integer
          example: 0
        vehicle_type:
          type: string
          example: "van"
        stops:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: "Customer A"
              latitude:
                type: number
                format: float
                example: 40.7128
              longitude:
                type: number
                format: float
                example: -74.0060
              is_depot:
                type: boolean
                example: false
              time_window_start:
                type: string
                example: "09:00"
              time_window_end:
                type: string
                example: "12:00"
              traffic_factor:
                type: number
                format: float
                example: 1.2
              leg_distance:
                type: number
                format: float
                example: 5.3
              leg_time:
                type: number
                format: float
                example: 0.25
              leg_fuel:
                type: number
                format: float
                example: 0.8
        total_distance:
          type: number
          format: float
          example: 52.8
        total_time:
          type: number
          format: float
          example: 2.5
        total_fuel:
          type: number
          format: float
          example: 8.5
        fuel_saved:
          type: number
          format: float
          example: 0.85
        traffic_impact:
          type: number
          format: float
          example: 15.5
          description: Additional minutes due to traffic

    CSVUpload:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: CSV file with location data

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Invalid input parameters"
      required:
        - error